[{"/Users/pro/Desktop/projects/cv/src/index.js":"1","/Users/pro/Desktop/projects/cv/src/App.js":"2","/Users/pro/Desktop/projects/cv/src/components/Condition.js":"3","/Users/pro/Desktop/projects/cv/src/components/GeneralEdit.js":"4","/Users/pro/Desktop/projects/cv/src/components/General.js":"5","/Users/pro/Desktop/projects/cv/src/components/Edu.js":"6","/Users/pro/Desktop/projects/cv/src/components/EduShow.js":"7","/Users/pro/Desktop/projects/cv/src/components/Education.js":"8"},{"size":221,"mtime":1611504061125,"results":"9","hashOfConfig":"10"},{"size":242,"mtime":1612083428659,"results":"11","hashOfConfig":"10"},{"size":1140,"mtime":1612197175765,"results":"12","hashOfConfig":"10"},{"size":1332,"mtime":1611845949561,"results":"13","hashOfConfig":"10"},{"size":2296,"mtime":1611845944925,"results":"14","hashOfConfig":"10"},{"size":4971,"mtime":1612085459260,"results":"15","hashOfConfig":"10"},{"size":1293,"mtime":1612199626809,"results":"16","hashOfConfig":"10"},{"size":3481,"mtime":1612275912211,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"14lho2n",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/pro/Desktop/projects/cv/src/index.js",[],["38","39"],"/Users/pro/Desktop/projects/cv/src/App.js",[],"/Users/pro/Desktop/projects/cv/src/components/Condition.js",["40","41"],"import React, { Component } from 'react'\nimport General from \"./General\"\nimport GeneralEdit from \"./GeneralEdit\"\nimport Education from './Education'\nimport EduShow from './EduShow'\n\nclass Condition extends Component {\n    constructor(props){\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <div>\n                {console.log(this.props.process)}\n                {this.props.process===\"add\" &&\n                    <GeneralEdit  name={this.props.name} number={this.props.number} email={this.props.email} />\n                }\n\n                {this.props.process==='edit' &&\n                    <General  name={this.props.name} number={this.props.number} email={this.props.email} />\n                } \n\n                {this.props.process === 'editEdu' &&\n                    <div>\n                        <Education list={this.props.list} edit={this.props.edit} name={this.props.name} title={this.props.title} start={this.props.start} end={this.props.end} />\n                        {console.log('editEdu')}\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Condition\n","/Users/pro/Desktop/projects/cv/src/components/GeneralEdit.js",[],"/Users/pro/Desktop/projects/cv/src/components/General.js",[],"/Users/pro/Desktop/projects/cv/src/components/Edu.js",["42"],"import React, { Component } from 'react'\nimport EduShow from './EduShow'\n\nclass Edu extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: this.props.name,\n            title: this.props.title,\n            start: this.props.start,\n            end: this.props.end,\n            submit: false,\n            showList: this.props.list,\n            edit: this.props.edit,\n        }\n\n        this.addName = this.addName.bind(this);\n        this.addTitle = this.addTitle.bind(this);\n        this.addStart = this.addStart.bind(this);\n        this.addEnd = this.addEnd.bind(this);\n        this.addList = this.addList.bind(this);\n        this.changeEdit = this.changeEdit.bind(this);\n        this.editInfo = this.editInfo.bind(this);\n    }\n\n    changeEdit() {\n        this.setState({\n            edit: !this.state.edit,\n        })\n    }\n\n    addName(e) {\n        this.setState({\n            name: e.target.value,\n        })\n    }\n\n    addTitle(e) {\n        this.setState({\n            title: e.target.value,\n        })\n    }\n\n    addStart(e) {\n        {console.log(e.target.value)}\n        this.setState({\n            start: e.target.value,\n        })\n    }\n\n    addEnd(e) {\n        this.setState({\n            end: e.target.value,\n        })\n    }\n\n    addList() {\n        //every time we press add info with edushow added to the list and it just showed in the screen\n        this.setState({\n            showList: this.state.showList.concat(<EduShow key={this.state.showList.length-1} list={this.state.showList} name={this.state.name} title={this.state.title} start={this.state.start} end={this.state.end}/>),\n            name: '',\n            title: '',\n            start: '',\n            end: '',\n            edit: false,\n            submit: true,\n        })\n    }\n    \n    editInfo() {\n        this.setState({\n            showList: this.state.showList.splice(this.props.key,1),\n        })\n\n    }\n\n    render() {\n        //we can give every edushow key with their number in list\n        // everytime we press edit it will change some props to true and save part will show \n        //with its value and data will be deleted from list \n        // so in this return we need to give it condition on which case\n        // it should work like usual and not like usual \n        // after pressing save button this props should again became false to show like usual\n        return (\n            <div>\n                {this.state.edit\n                ? <div> \n                        {this.editInfo}\n                        {console.log(this.state.showList)}\n                        {this.state.showList}\n                        <form action=\"#\"> \n                            <div>\n                            <label for=\"name\">School Name:</label>\n                            <input onChange={(e)=>this.addName(e)} type=\"text\" id=\"name\" value={this.state.name}/>\n                            </div>\n                            <div>\n                            <label for=\"title\">Title of study:</label>\n                            <input type=\"text\" onChange={e=>this.addTitle(e)} id=\"title\" value={this.state.title} />\n                            </div>\n                            <div>\n                            <label for=\"date\">Date of study:</label>\n                            <input type=\"date\" onChange={e=>this.addStart(e)} id=\"date\" value={this.state.start} />\n                            <input type=\"date\" onChange={e=>this.addEnd(e)} id=\"date\" value={this.state.end} />\n                            </div>\n                            <button type=\"submit\" onClick={this.addList}>Save</button>\n                        </form>\n                </div>\n                : <div>\n                    <h3>Education</h3>\n                    {this.state.showList}\n                    <div>\n                        <form action=\"#\"> \n                            <div>\n                            <label for=\"name\">School Name:</label>\n                            <input onChange={(e)=>this.addName(e)} type=\"text\" id=\"name\" value={this.state.name}/>\n                            </div>\n                            <div>\n                            <label for=\"title\">Title of study:</label>\n                            <input type=\"text\" onChange={e=>this.addTitle(e)} id=\"title\" value={this.state.title} />\n                            </div>\n                            <div>\n                            <label for=\"date\">Date of study:</label>\n                            <input type=\"date\" onChange={e=>this.addStart(e)} id=\"date\" value={this.state.start} />\n                            <input type=\"date\" onChange={e=>this.addEnd(e)} id=\"date\" value={this.state.end} />\n                            </div>\n                            <button type=\"submit\" onClick={this.addList}>Save</button>\n                        </form>\n                    </div>\n                </div>}\n            </div>\n        )\n    }\n}\n\nexport default Edu\n","/Users/pro/Desktop/projects/cv/src/components/EduShow.js",["43","44","45"],"import React, { Component } from 'react'\nimport Condition from './Condition'\nimport Edu from './Edu'\n\nclass EduShow extends Component {\n    constructor(props){\n        super(props);\n        // this.state = {\n        //     submit: false,\n        // };\n        // this.changeSubmit = this.changeSubmit.bind(this);\n    }\n\n    // changeSubmit(){\n    //     this.setState({\n    //         submit: !this.state.submit,\n    //     })\n    // }\n    render() {\n        return (\n            <div>\n                <form action=\"#\">\n                    <div>\n                    <label for=\"name\">School Name:</label>\n                    <p id=\"name\">{this.props.name}</p>\n                    </div>\n                    <div>\n                    <label for=\"title\">Title of study:</label>\n                    <p id=\"title\">{this.props.title}</p>\n                    </div>\n                    <div>\n                    <label for=\"date\">Date of study:</label>\n                    <p id=\"date\">{this.props.start}:{this.props.end}</p>\n                    </div>\n                    <button onClick={()=>this.props.edit(this.props.name, this.props.title, this.props.start, this.props.end, this.props.listID)}>Edit</button>\n                </form>\n            </div>\n        ) \n    }\n}\n\nexport default EduShow\n","/Users/pro/Desktop/projects/cv/src/components/Education.js",["46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":5,"column":8,"nodeType":"53","messageId":"54","endLine":5,"endColumn":15},{"ruleId":"55","severity":1,"message":"56","line":8,"column":5,"nodeType":"57","messageId":"58","endLine":11,"endColumn":6},{"ruleId":"59","severity":1,"message":"60","line":45,"column":9,"nodeType":"61","messageId":"62","endLine":45,"endColumn":38},{"ruleId":"51","severity":1,"message":"63","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":17},{"ruleId":"51","severity":1,"message":"64","line":3,"column":8,"nodeType":"53","messageId":"54","endLine":3,"endColumn":11},{"ruleId":"55","severity":1,"message":"56","line":6,"column":5,"nodeType":"57","messageId":"58","endLine":12,"endColumn":6},{"ruleId":"59","severity":1,"message":"60","line":68,"column":9,"nodeType":"61","messageId":"62","endLine":68,"endColumn":38},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'EduShow' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Condition' is defined but never used.","'Edu' is defined but never used.","no-global-assign","no-unsafe-negation"]