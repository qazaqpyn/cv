{"version":3,"sources":["components/General.js","components/GeneralEdit.js","components/Condition.js","components/PracticeShow.js","components/Practice.js","components/EduShow.js","components/Education.js","App.js","index.js"],"names":["General","props","state","name","email","number","submit","addName","bind","addEmail","addNumber","changeSubmit","e","this","setState","target","value","preview","process","action","className","for","type","id","onChange","required","defaultCountry","formatPhoneNumberIntl","onClick","Component","GeneralEdit","style","display","Condition","console","log","PracticeShow","position","tasks","start","end","edit","listID","delete","Practice","list","addPosition","addTasks","addStart","addEnd","addList","editInfo","deleteInfo","index","Object","assign","splice","concat","pName","pPosition","pTasks","pStart","pEnd","map","info","EduShow","title","Education","addTitle","eName","eTitle","eStart","eEnd","Ekey","edu","App","text","useState","setPreview","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.071c2f00.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Condition from \"./Condition\"\nimport 'react-phone-number-input/style.css'\nimport PhoneInput,{formatPhoneNumberIntl} from 'react-phone-number-input'\n\nclass General extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: this.props.name,\n            email: this.props.email,\n            number: this.props.number, \n            submit: false,\n        };\n\n        this.addName = this.addName.bind(this);\n        this.addEmail = this.addEmail.bind(this);\n        this.addNumber = this.addNumber.bind(this);\n        this.changeSubmit = this.changeSubmit.bind(this);\n    }\n\n    addName(e){\n        this.setState({\n            name: e.target.value,\n        })\n    }\n\n    addEmail(e){\n        this.setState({\n            email: e.target.value,\n        })\n    }\n\n    addNumber(e){\n        this.setState({\n            number: e,\n        })\n    }\n\n    changeSubmit(){\n        this.setState({\n            submit: !this.state.submit,\n        })\n    }\n\n    render() {\n        return (this.state.submit && this.state.name && this.state.number && this.state.email) || this.props.preview ? (\n            <Condition preview={this.props.preview} process=\"add\" name={this.state.name} number = {this.state.number} email = {this.state.email} />\n        ) : (\n            <div>\n                <h2>General Information</h2>\n                <form action=\"#\">\n                    <div className=\"input-container\">\n                    <label for=\"name\"  >Name:</label>\n                    <input type=\"text\" id=\"name\" onChange={(e)=>this.addName(e)} value={this.state.name} required/>\n                    </div>\n                    <div className=\"input-container\">\n                    <label for=\"email\">Email:</label>\n                    <input type=\"email\" id=\"email\" onChange={(e)=>this.addEmail(e)} value={this.state.email} required/>\n                    </div>\n                    <div className=\"input-container\">\n                    <label for=\"number\">Number:</label>\n                    <PhoneInput id=\"number\" defaultCountry=\"KZ\" onChange={(e)=>this.addNumber(e)} value={formatPhoneNumberIntl(this.state.number)} required/>\n                    </div>\n                    <button type=\"submit\" onClick={this.changeSubmit}>Save</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default General\n","import React, { Component } from 'react'\nimport Condition from \"./Condition\"\n\nexport class GeneralEdit extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            submit: false,\n        };\n        this.changeSubmit = this.changeSubmit.bind(this);\n    }\n\n    changeSubmit(){\n        this.setState({\n            submit: !this.state.submit,\n        })\n    }\n\n    render() {\n        return this.state.submit ? (\n            <Condition preview={this.props.preview} process=\"edit\" name={this.props.name} number={this.props.number} email={this.props.email} />\n        ):(\n            <div>\n                <h2>General Information</h2>\n                <form action=\"#\">\n                    <div>\n                        <p id=\"name\">Name: {this.props.name}</p>\n                    </div>\n                    <div>\n                        <p id=\"email\">Email: {this.props.email}</p>\n                    </div>\n                    <div>\n                        <p id=\"number\"> Number: {this.props.number}</p>\n                    </div>\n                    <button style={{display:this.props.preview?'none':'block'}} onClick={this.changeSubmit}>Edit</button>\n                </form>\n            </div>\n        ) \n    }\n}\n\nexport default GeneralEdit\n","import React, { Component } from 'react'\nimport General from \"./General\"\nimport GeneralEdit from \"./GeneralEdit\"\n\n\n\nclass Condition extends Component {\n    constructor(props){\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <div>\n                {console.log(this.props.process)}\n                {console.log('in condition :'+this.props.preview)}\n                {this.props.process===\"add\" &&\n                    <GeneralEdit preview={this.props.preview}  name={this.props.name} number={this.props.number} email={this.props.email} />\n                }\n\n                {this.props.process==='edit' &&\n                    <General preview={this.props.preview}  name={this.props.name} number={this.props.number} email={this.props.email} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Condition\n","import React, { Component } from 'react'\nimport '../styles/style.css'\n\nclass PracticeShow extends Component {\n    constructor(props){\n        super(props);\n    }\n    render() {\n        return (\n            <div>\n                <form action=\"#\">\n                    <div>\n                        <p id=\"name\">Company Name: {this.props.name}</p>\n                    </div>\n                    <div>\n                        <p id=\"title\">Position: {this.props.position}</p>\n                    </div>\n                    <div>\n                        <p>Main Tasks of Job: {this.props.tasks}</p>\n                    </div>\n                    <div>\n                        <p id=\"date\">Duration: {this.props.start}:{this.props.end}</p>\n                    </div>\n                    <button \n                        style={{display:this.props.preview?'none':'inline-block'}} \n                        onClick={()=>this.props.edit(this.props.listID, this.props.name, this.props.position,this.props.tasks, this.props.start, this.props.end)}>\n                            Edit\n                    </button>\n                    <button \n                        style={{display:this.props.preview?'none':'inline-block'}} \n                        onClick={()=>this.props.delete(this.props.listID)}>\n                            Delete\n                    </button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default PracticeShow\n","import React, { Component } from 'react'\nimport PracticeShow from './PracticeShow'\n\nclass Practice extends Component {\n    constructor(props) {\n        super(props);\n        this.state= {\n            name: this.props.name,\n            position: this.props.position,\n            tasks: this.props.tasks,\n            start: this.props.start,\n            end: this.props.end,\n            list: this.props.list,\n        }\n        this.addName = this.addName.bind(this);\n        this.addPosition = this.addPosition.bind(this);\n        this.addTasks = this.addTasks.bind(this);\n        this.addStart = this.addStart.bind(this);\n        this.addEnd = this.addEnd.bind(this);\n        this.addList = this.addList.bind(this);\n        this.editInfo = this.editInfo.bind(this);\n        this.deleteInfo = this.deleteInfo.bind(this);\n    }\n\n    deleteInfo(index){\n        const list = Object.assign([],this.state.list);\n        list.splice(index,1);\n        this.setState({\n            list: list,\n        })\n    }\n\n    addList() {\n        this.setState({\n            list: this.state.list.concat({\n                name: this.state.name,\n                position: this.state.position,\n                tasks: this.state.tasks,\n                start: this.state.start,\n                end: this.state.end,\n            }),\n            name: '',\n            position: '',\n            tasks: '',\n            start: '',\n            end: '',\n        })\n    }\n\n    addName(e) {\n        this.setState({\n            name: e.target.value,\n        })\n    }\n\n    addPosition(e) {\n        this.setState({\n            position: e.target.value,\n        })\n    }\n\n    addTasks(e) {\n        this.setState({\n            tasks: e.target.value,\n        })\n    }\n\n    addStart(e) {\n        this.setState({\n            start: e.target.value,\n        })\n    }\n\n    addEnd(e) {\n        this.setState({\n            end: e.target.value,\n        })\n    }\n\n    editInfo(index, pName, pPosition, pTasks, pStart, pEnd) {\n        const list = Object.assign([],this.state.list);\n        list.splice(index,1);\n        this.setState({\n            list: list,\n            name: pName,\n            position: pPosition,\n            tasks: pTasks,\n            start: pStart,\n            end: pEnd,\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Practical Experience</h2>\n\n                {\n                    this.state.list.map((info,index)=>{\n                        return(\n                            <PracticeShow\n                            preview = {this.props.preview}\n                            delete = {this.deleteInfo}\n                            listID = {index}\n                            name= {info.name}\n                            position = {info.position}\n                            tasks = {info.tasks}\n                            start = {info.start}\n                            end = {info.end}\n                            edit = {this.editInfo}\n                            />\n                        )\n                    })\n                }\n\n                {!this.props.preview &&\n                    <form action=\"#\"> \n                        <div className=\"input-container\">\n                            <label for=\"name\">Company Name:</label>\n                            <input onChange={(e)=>this.addName(e)} type=\"text\" id=\"name\" value={this.state.name}/>\n                        </div>\n                        <div className=\"input-container\">\n                            <label for=\"position\">Position:</label>\n                            <input type=\"text\" onChange={e=>this.addPosition(e)} id=\"position\" value={this.state.position} />\n                        </div>\n                        <div className=\"input-container\">\n                            <label for=\"task\">Main Tasks of Job:</label>\n                            <input type=\"text\" onChange={e=>this.addTasks(e)} id=\"task\" value={this.state.tasks} />\n                        </div>\n                        <div className=\"input-container\">\n                            <label for=\"date\">Date of Job:</label>\n                            <input type=\"date\" onChange={e=>this.addStart(e)} id=\"date\" value={this.state.start} />\n                            <input type=\"date\" onChange={e=>this.addEnd(e)} id=\"date\" value={this.state.end} />\n                        </div>\n                        <button type=\"submit\" onClick={this.addList}>Save</button>\n                    </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Practice\n","import React, { Component } from 'react'\n\n\n\nclass EduShow extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <form action=\"#\">\n                    <div>\n                        <p id=\"name\">School Name: {this.props.name}</p>\n                    </div>\n                    <div>\n                        <p id=\"title\">Title of study: {this.props.title}</p>\n                    </div>\n                    <div>\n                        <p id=\"date\">Duration: {this.props.start}:{this.props.end}</p>\n                    </div>\n                    <button style={{display:this.props.preview?'none':'inline-block'}} onClick={()=>this.props.edit(this.props.name, this.props.title, this.props.start, this.props.end, this.props.listID)}>Edit</button>\n                    <button style={{display:this.props.preview?'none':'inline-block'}} onClick={()=>this.props.delete(this.props.listID)}>Delete</button>\n                </form>\n            </div>\n        ) \n    }\n}\n\nexport default EduShow\n","import React, { Component } from 'react'\nimport EduShow from './EduShow'\n\nexport class Education extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: this.props.name,\n            title: this.props.title,\n            start: this.props.start,\n            end: this.props.end,\n            list: this.props.list,\n        }\n        this.addName = this.addName.bind(this);\n        this.addTitle = this.addTitle.bind(this);\n        this.addStart = this.addStart.bind(this);\n        this.addEnd = this.addEnd.bind(this);\n        this.addList = this.addList.bind(this);\n        this.editInfo = this.editInfo.bind(this);\n        this.deleteInfo = this.deleteInfo.bind(this);\n    }\n\n    deleteInfo(index){\n        const list = Object.assign([],this.state.list);\n        list.splice(index,1);\n        this.setState({\n            list: list,\n        })\n    }\n\n    editInfo(eName, eTitle, eStart, eEnd, Ekey) {\n        console.log(eName + \" deleting \"+ Ekey)\n        const list = Object.assign([],this.state.list);\n        list.splice(Ekey,1);\n        \n        this.setState({\n            list: list,\n            name: eName,\n            title: eTitle,\n            start: eStart,\n            end: eEnd,\n        })\n        console.log(this.state.list);\n    }\n\n    addList() {\n        console.log(\"i am adding to list\")\n        //every time we press add info with edushow added to the list and it just showed in the screen\n        this.setState({\n            list: this.state.list.concat(\n            { \n            name:this.state.name,\n            title:this.state.title,\n            start:this.state.start,\n            end:this.state.end}\n            ),\n            name: '',\n            title: '',\n            start: '',\n            end: '',\n        })\n    }\n\n    addName(e) {\n        this.setState({\n            name: e.target.value,\n        })\n    }\n\n    addTitle(e) {\n        this.setState({\n            title: e.target.value,\n        })\n    }\n\n    addStart(e) {\n        {console.log(e.target.value)}\n        this.setState({\n            start: e.target.value,\n        })\n    }\n\n    addEnd(e) {\n        this.setState({\n            end: e.target.value,\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Education</h2>\n                {\n                this.state.list.map((edu, index)=>{\n                    return (\n                        <EduShow\n                        preview = {this.props.preview}\n                        delete = {this.deleteInfo}\n                        edit={this.editInfo} \n                        listID={index} \n                        name={edu.name} \n                        title={edu.title} \n                        start={edu.start} \n                        end={edu.end} />\n                    )\n                })\n                }\n                {!this.props.preview &&\n                    <form action=\"#\"> \n                        <div className=\"input-container\">\n                        <label for=\"name\">School Name:</label>\n                        <input onChange={(e)=>this.addName(e)} type=\"text\" id=\"name\" value={this.state.name}/>\n                        </div>\n                        <div className=\"input-container\">\n                        <label for=\"title\">Title of study:</label>\n                        <input type=\"text\" onChange={e=>this.addTitle(e)} id=\"title\" value={this.state.title} />\n                        </div>\n                        <div className=\"input-container\">\n                        <label for=\"date\">Date of study:</label>\n                        <input type=\"date\" onChange={e=>this.addStart(e)} id=\"date\" value={this.state.start} />\n                        <input type=\"date\" onChange={e=>this.addEnd(e)} id=\"date\" value={this.state.end} />\n                        </div>\n                        <button type=\"submit\" onClick={this.addList}>Save</button>\n                    </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Education\n","import './App.css';\nimport Condition from './components/Condition'\nimport Practice from './components/Practice'\nimport Education from './components/Education'\nimport {useState} from 'react'\nimport './App.css'\n\n\nfunction App() {\n  const [preview, setPreview] = useState(false);\n  let text;\n  preview?text='Preview':text='Edit-Mode';\n  return (\n    <div>\n      <div onClick={()=>setPreview(!preview)} id=\"btn\">\n        <span className=\"noselect\">\n          {text}\n        </span>\n          <div id=\"circle\">\n          </div>\n      </div>\n      {/* <button onClick={()=>setPreview(!preview)}>{text}</button> */}\n      {console.log('in app'+preview)}\n      <Condition preview={preview} process=\"edit\" />\n      <Education preview={preview} list={[]} />\n      <Practice preview={preview} list={[]} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}